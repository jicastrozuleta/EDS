/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.com.servicentroguerrero.gui;

import co.com.servicentro.util.DocumentTypeDouble;
import co.com.servicentro.util.Util;
import co.com.servicentroguerrero.controler.ControllerBO;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import org.jdatepicker.impl.JDatePickerImpl;

/**
 *
 * @author JICZ4
 */
public class JFrameCalibracion extends javax.swing.JFrame {

    /**
     *
     * Constante para indicar una posicion por defecto en combobox.
     */
    private static final int POSITION_DEFAULT = 0x00;
    
    

    /**
     * Creates new form JFrameCalibracion
     */
    public JFrameCalibracion() {
        initComponents();
        /*Validar que los campos sean numericos tipo double*/
        setDocumentsDouble();
        cargarSurtidores();
        cargarFechaActual();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelCalibracion = new javax.swing.JPanel();
        jButtonIngresarCalibracion = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jComboBoxSurtidores = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldGalonesUsados = new javax.swing.JTextField();
        jPanelPicker = new javax.swing.JPanel();
        jTextFieldFecha = new javax.swing.JTextField();
        jPanelFecha = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Calibracion");
        getContentPane().setLayout(new java.awt.GridLayout(1, 1, 1, 1));

        jButtonIngresarCalibracion.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonIngresarCalibracion.setText("Ingresar Calibracion");
        jButtonIngresarCalibracion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonIngresarCalibracionActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Datos de Calibracion", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jComboBoxSurtidores.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Galones Usados: ");

        jTextFieldGalonesUsados.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jPanelPicker.setLayout(new java.awt.GridLayout(1, 1));

        jTextFieldFecha.setEditable(false);
        jTextFieldFecha.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTextFieldFecha.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jTextFieldFecha.setEnabled(false);
        jPanelPicker.add(jTextFieldFecha);

        jPanelFecha.setLayout(new java.awt.GridLayout(1, 1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Fecha:");
        jPanelFecha.add(jLabel2);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxSurtidores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanelFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextFieldGalonesUsados, javax.swing.GroupLayout.DEFAULT_SIZE, 239, Short.MAX_VALUE)
                            .addComponent(jPanelPicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBoxSurtidores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanelPicker, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelFecha, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldGalonesUsados, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelCalibracionLayout = new javax.swing.GroupLayout(jPanelCalibracion);
        jPanelCalibracion.setLayout(jPanelCalibracionLayout);
        jPanelCalibracionLayout.setHorizontalGroup(
            jPanelCalibracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCalibracionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCalibracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonIngresarCalibracion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelCalibracionLayout.setVerticalGroup(
            jPanelCalibracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCalibracionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonIngresarCalibracion, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelCalibracion);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonIngresarCalibracionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonIngresarCalibracionActionPerformed
        try {
            /*capturar el id del surtidor seleccionado*/
            int position = jComboBoxSurtidores.getSelectedIndex() - 1;

            /*Si hay una posicion valida, capturar los datos necesarios*/
            if (position != JComboBox.UNDEFINED_CONDITION) {
                int idSurtidor = ControllerBO.cargarListaSurtidores().get(position).getIdSurtidor();
                String galonesUsados = jTextFieldGalonesUsados.getText().trim();
                String descripcion = "Calibrado : " + Util.getHoraActual();

                /*intentar el registro de la calibracion en base de datos para el surtidor seleccionado*/
                if (ControllerBO.insertarCalibracion(idSurtidor, galonesUsados, descripcion) > 0) {
                    jComboBoxSurtidores.setSelectedIndex(POSITION_DEFAULT);
                    jTextFieldGalonesUsados.setText("");
                    JOptionPane.showMessageDialog(this, "Calibracion registrada de forma correcta.", "CALIBRADO", JOptionPane.INFORMATION_MESSAGE);
                }
            } else {
                throw new Exception("Seleccione un surtidor para registrar su calibracion.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonIngresarCalibracionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonIngresarCalibracion;
    private javax.swing.JComboBox<String> jComboBoxSurtidores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelCalibracion;
    private javax.swing.JPanel jPanelFecha;
    private javax.swing.JPanel jPanelPicker;
    private javax.swing.JTextField jTextFieldFecha;
    private javax.swing.JTextField jTextFieldGalonesUsados;
    // End of variables declaration//GEN-END:variables

    
    /**
     * cargar los surtidores disponibles para hacer la calibracion.
     */
    private void cargarSurtidores() {
        /*Marcar posicion por defecto y asignarla al combo*/
        jComboBoxSurtidores.insertItemAt("Seleccione Surtidor - ", POSITION_DEFAULT);
        jComboBoxSurtidores.setSelectedIndex(POSITION_DEFAULT);

        /*Agregar los items con los datos de los empleados con rol islero.*/
        ControllerBO.cargarListaSurtidores().forEach((surtidor) -> {
            jComboBoxSurtidores.addItem(surtidor.getCodigoIdentificador());
        });
    }

    /**
     * Cargar en pantalla la fecha actual. para calibracion
     */
    private void cargarFechaActual() {
        Date ahora = new Date();
        SimpleDateFormat formateador = new SimpleDateFormat("yyyy-MM-dd", new Locale("es", "CO"));
        jTextFieldFecha.setText(formateador.format(ahora));
    }

    
    /**
     * Validar ingreso de texto solo numerico double
     */
    private void setDocumentsDouble() {
        jTextFieldGalonesUsados.setDocument(new DocumentTypeDouble());
    }
}
