/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.com.servicentroguerrero.gui;

import co.com.servicentro.util.DocumentTypeDouble;
import co.com.servicentroguerrero.controler.ControllerBO;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

/**
 *
 * @author JICZ4
 */
public class JFrameMedidaRegla extends javax.swing.JFrame {

    /**
     *
     * Constante para indicar una posicion por defecto en combobox.
     */
    private static final int POSITION_DEFAULT = 0x00;

    /**
     * Creates new form JFrameCalibracion
     */
    public JFrameMedidaRegla() {
        initComponents();
        setDocumentsDouble();
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelCalibracion = new javax.swing.JPanel();
        jButtonRegistrarMedida = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jComboBoxSurtidores = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldMedidaRegla = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Medida Regla");
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridLayout(1, 1, 1, 1));

        jButtonRegistrarMedida.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButtonRegistrarMedida.setText("Registrar Medida");
        jButtonRegistrarMedida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRegistrarMedidaActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Medida Regla Mojada", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Tahoma", 1, 12))); // NOI18N

        jComboBoxSurtidores.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Medida Regla:");

        jTextFieldMedidaRegla.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxSurtidores, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                        .addComponent(jTextFieldMedidaRegla, javax.swing.GroupLayout.DEFAULT_SIZE, 247, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jComboBoxSurtidores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldMedidaRegla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanelCalibracionLayout = new javax.swing.GroupLayout(jPanelCalibracion);
        jPanelCalibracion.setLayout(jPanelCalibracionLayout);
        jPanelCalibracionLayout.setHorizontalGroup(
            jPanelCalibracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelCalibracionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelCalibracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButtonRegistrarMedida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanelCalibracionLayout.setVerticalGroup(
            jPanelCalibracionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelCalibracionLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonRegistrarMedida, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        getContentPane().add(jPanelCalibracion);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonRegistrarMedidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRegistrarMedidaActionPerformed
        try {
            /*capturar la medida de la regla*/
            double medidaRegla = Double.parseDouble(jTextFieldMedidaRegla.getText().trim());

            /*capturar el id del surtidor seleccionado*/
            int position = jComboBoxSurtidores.getSelectedIndex() - 1;
            if (position != JComboBox.UNDEFINED_CONDITION) {
                int idSurtidor = ControllerBO.cargarSurtidoresSinMedidaRegla().get(position).getIdSurtidor();
                
                /*Iniciar el calculo del volumen*/
                double galonesInsertado = ControllerBO.insertarVolumenes(String.valueOf(idSurtidor), medidaRegla);
                if(galonesInsertado >= 0){
                    String mensaje = "El volumen registrado para este surtidor es de: " + galonesInsertado + " gls.";
                    JOptionPane.showMessageDialog(this, mensaje, "VOLUMEN CALCULADO", JOptionPane.INFORMATION_MESSAGE);
                    cargarSurtidores();
                    jTextFieldMedidaRegla.setText("");
                }
                else 
                    throw new Exception("No se calcul√≥ el volumen de combustible del cilindro, intente nuevamente.");
            }
        }
        catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "NUMERO NO VALIDO", JOptionPane.ERROR_MESSAGE);
        } 
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, e.getMessage(), "ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButtonRegistrarMedidaActionPerformed

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        cargarSurtidores();
    }//GEN-LAST:event_formComponentShown


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonRegistrarMedida;
    private javax.swing.JComboBox<String> jComboBoxSurtidores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelCalibracion;
    private javax.swing.JTextField jTextFieldMedidaRegla;
    // End of variables declaration//GEN-END:variables

    
    private void setDocumentsDouble() {
        jTextFieldMedidaRegla.setDocument(new DocumentTypeDouble());
    }
    
    /**
     * cargar los surtidores disponibles para hacer la calibracion.
     */
    private void cargarSurtidores() {
        /*Limpiar los anteriores items del combo para agregar unos nuevos*/
        jComboBoxSurtidores.removeAllItems();
        
        /*Marcar posicion por defecto y asignarla al combo*/
        jComboBoxSurtidores.insertItemAt("Seleccione Surtidor - ", POSITION_DEFAULT);
        jComboBoxSurtidores.setSelectedIndex(POSITION_DEFAULT);

        /*Agregar los items con los datos de los empleados con rol islero.*/
        ControllerBO.cargarSurtidoresSinMedidaRegla().forEach((surtidor) -> {
            jComboBoxSurtidores.addItem(surtidor.getCodigoIdentificador());
        });
    }
}
